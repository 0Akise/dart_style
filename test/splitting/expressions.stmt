40 columns                              |
>>> adjacent strings
var name = new Symbol("the first string" "the second string");
<<<
var name = new Symbol("the first string"
    "the second string");
>>> conditions, same operator
if (identifier || identifier || identifier || identifier) {
}
<<<
if (identifier ||
    identifier ||
    identifier ||
    identifier) {}
>>> conditions, different operators
if (identifier && identifier || identifier
                && identifier) {
}
<<<
if (identifier && identifier ||
    identifier && identifier) {}
>>> split conditional after "?"
var kind = element != null ? longArgument : arg;
<<<
var kind = element != null ?
    longArgument : arg;
>>> split conditional after ":"
var kind = element != null ? argument : arg;
<<<
var kind = element != null ? argument :
    arg;
>>> unsplit operator chains before and after block
first + second + () {body;} + third + fourth;
<<<
first + second + () {
  body;
} + third + fourth;
>>> split operator chain before block
first + second + third + fourth + fifth + () {body;} + sixth + seventh;
<<<
first +
    second +
    third +
    fourth +
    fifth +
    () {
  body;
} + sixth + seventh;
>>> split operator chain after block
first + second + third + () {body;} + fourth + fifth + sixth + seventh + eighth;
<<<
first + second + third + () {
  body;
} +
    fourth +
    fifth +
    sixth +
    seventh +
    eighth;